# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"list_data": "00_core.ipynb",
         "get_filepath": "00_core.ipynb",
         "get_data": "00_core.ipynb",
         "prepare_weather": "00_core.ipynb",
         "AquaCropModel": "00_core.ipynb",
         "read_clock_paramaters": "01_initialize.ipynb",
         "read_weather_inputs": "01_initialize.ipynb",
         "read_model_parameters": "01_initialize.ipynb",
         "read_irrigation_management": "01_initialize.ipynb",
         "read_field_management": "01_initialize.ipynb",
         "read_groundwater_table": "01_initialize.ipynb",
         "compute_variables": "01_initialize.ipynb",
         "compute_crop_calander": "01_initialize.ipynb",
         "calculate_HIGC": "01_initialize.ipynb",
         "calculate_HI_linear": "01_initialize.ipynb",
         "read_model_initial_conditions": "01_initialize.ipynb",
         "create_soil_profile": "01_initialize.ipynb",
         "solution": "02_timestep.ipynb",
         "check_model_termination": "02_timestep.ipynb",
         "reset_initial_conditions": "02_timestep.ipynb",
         "update_time": "02_timestep.ipynb",
         "growing_degree_day": "03_solution.ipynb",
         "root_zone_water": "03_solution.ipynb",
         "check_groundwater_table": "03_solution.ipynb",
         "root_development": "03_solution.ipynb",
         "pre_irrigation": "03_solution.ipynb",
         "drainage": "03_solution.ipynb",
         "rainfall_partition": "03_solution.ipynb",
         "irrigation": "03_solution.ipynb",
         "infiltration": "03_solution.ipynb",
         "capillary_rise": "03_solution.ipynb",
         "germination": "03_solution.ipynb",
         "growth_stage": "03_solution.ipynb",
         "water_stress": "03_solution.ipynb",
         "cc_development": "03_solution.ipynb",
         "cc_required_time": "03_solution.ipynb",
         "adjust_CCx": "03_solution.ipynb",
         "update_CCx_CDC": "03_solution.ipynb",
         "canopy_cover": "03_solution.ipynb",
         "evap_layer_water_content": "03_solution.ipynb",
         "soil_evaporation": "03_solution.ipynb",
         "aeration_stress": "03_solution.ipynb",
         "transpiration": "03_solution.ipynb",
         "groundwater_inflow": "03_solution.ipynb",
         "HIref_current_day": "03_solution.ipynb",
         "biomass_accumulation": "03_solution.ipynb",
         "temperature_stress": "03_solution.ipynb",
         "HIadj_pre_anthesis": "03_solution.ipynb",
         "HIadj_pollination": "03_solution.ipynb",
         "HIadj_post_anthesis": "03_solution.ipynb",
         "harvest_index": "03_solution.ipynb",
         "ClockStructClass": "04_classes.ipynb",
         "OutputClass": "04_classes.ipynb",
         "ParamStructClass": "04_classes.ipynb",
         "SoilClass": "04_classes.ipynb",
         "CropClass": "04_classes.ipynb",
         "IrrMngtClass": "04_classes.ipynb",
         "IrrMngtStruct": "04_classes.ipynb",
         "spec": "04_classes.ipynb",
         "FieldMngtClass": "04_classes.ipynb",
         "FieldMngtStruct": "04_classes.ipynb",
         "GwClass": "04_classes.ipynb",
         "InitWCClass": "04_classes.ipynb",
         "CropStruct": "04_classes.ipynb",
         "InitCondClass": "04_classes.ipynb",
         "WevapClass": "04_classes.ipynb",
         "SoilProfileClass": "04_classes.ipynb",
         "TAWClass": "04_classes.ipynb",
         "DrClass": "04_classes.ipynb",
         "thRZClass": "04_classes.ipynb",
         "KswClass": "04_classes.ipynb",
         "KstClass": "04_classes.ipynb",
         "CO2Class": "04_classes.ipynb",
         "run_comparison": "05_comparison.ipynb",
         "prepare_lars_weather": "06_lars.ipynb",
         "select_lars_wdf": "06_lars.ipynb"}

modules = ["core.py",
           "initialize.py",
           "timestep.py",
           "solution.py",
           "classes.py",
           "comparison.py",
           "lars.py"]

doc_url = "https://qiz5.github.io/nbdev_qq_test/"

git_url = "https://github.com/qiz5/nbdev_qq_test/tree/{branch}/"

def custom_doc_links(name): return None
